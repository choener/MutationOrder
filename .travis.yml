# This Travis job script has been generated by a script via
#
#   make_travis_yml_2.hs 'MutationOrder.cabal' 'alex' 'happy'
#
# For more information, see https://github.com/hvr/multi-ghc-travis
#
language: c
sudo: false

git:
  submodules: false  # whether to recursively clone submodules

cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.cache
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index.tar.idx

matrix:
  include:
    - compiler: "ghc-8.0.2"
    # env: TEST=--disable-tests BENCH=--disable-benchmarks
      addons: {apt: {packages: [ghc-ppa-tools,cabal-install-head,ghc-8.0.2,alex,happy], sources: [hvr-ghc]}}

before_install:
 - HC=${CC}
 - HCPKG=${HC/ghc/ghc-pkg}
 - unset CC
 - PATH=/opt/ghc/bin:/opt/ghc-ppa-tools/bin:$PATH
 - PKGNAME='MutationOrder'

install:
 - cabal --version
 - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - BENCH=${BENCH---enable-benchmarks}
 - TEST=${TEST---enable-tests}
 - HADDOCK=${HADDOCK-true}
 - INSTALLED=${INSTALLED-true}
 - travis_retry cabal update -v
 - sed -i.bak 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - rm -fv cabal.project.local
 - "echo 'packages: .' > cabal.project"
 - rm -f cabal.project.freeze
 - cabal new-build -w ${HC} ${TEST} ${BENCH} --dep -j2 all
 - cabal new-build -w ${HC} --disable-tests --disable-benchmarks --dep -j2 all

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - rm -rf .ghc.environment.* dist/
 - cabal sdist # test that a source-distribution can be generated
 - cd dist/
 - SRCTAR=(${PKGNAME}-*.tar.gz)
 - SRC_BASENAME="${SRCTAR/%.tar.gz}"
 - tar -xvf "./$SRC_BASENAME.tar.gz"
 - cd "$SRC_BASENAME/"
## from here on, CWD is inside the extracted source-tarball
 - rm -fv cabal.project.local
 - "echo 'packages: .' > cabal.project"
 # this builds all libraries and executables (without tests/benchmarks)
 - rm -f cabal.project.freeze
 - cabal new-build -w ${HC} --disable-tests --disable-benchmarks all
 # this builds all libraries and executables (including tests/benchmarks)
 # - rm -rf ./dist-newstyle

 # Build with installed constraints for packages in global-db
 - if $INSTALLED; then
     echo cabal new-build -w ${HC} --disable-tests --disable-benchmarks $(${HCPKG} list --global --simple-output --names-only | sed 's/\([a-zA-Z0-9-]\{1,\}\) */--constraint="\1 installed" /g') all | sh;
   else echo "Not building with installed constraints"; fi

 # build & run tests, build benchmarks
 - cabal new-build -w ${HC} ${TEST} ${BENCH} all
 - if [ "x$TEST" = "x--enable-tests" ]; then cabal new-test -w ${HC} ${TEST} all; fi

 # haddock
 # - rm -rf ./dist-newstyle
 # - if $HADDOCK; then cabal new-haddock -w ${HC} --disable-tests --disable-benchmarks all; else echo "Skipping haddock generation";fi

 # This is all part of the deployment process
 - echo ${HC}
 - pwd
 - ls -alh
 - find dist-newstyle -executable -type f
 - $TRAVIS_BUILD_DIR/.travis/prepare-release.sh

deploy:
  provider: releases
  file_glob: true
  file: "build/*.tgz"
  skip_cleanup: true
  overwrite: true
  on:
    branch: master
    tags: true
    condition: "$HC = ghc-8.0.2"
  api_key:
    secure: "V3U+c76ewJ+jNIO6EQDcSJmp+brCFxXlkoOwABSDLSEZbFXIYgyCk+QmjoDl/am7jHifGCcKPXIZ/ElCA+N1BRs6Zx09zUaW65W296cuFhiOT7E0lFPb4Zsdu3axOlhNZeICP3B+hcMP2hpNIZXfy5JC6Z5nMWXjrbTw1SjpijxdQMXmVd8Rp3FHxQuAafzr0Wy+rQ2uusbk7LFfboYwxU6tnBh7tRHOqqkhds76KP4bM4VYqzkkZcjqxdzi5S28d/UEld6GcNQaAdubduvhZKfMHt95ZlaLsJPIxId9vPZ5RVs7MILJP9pCB5LDDEfZD6oABZCG5/AyLBZkUWXNK6016fNqMVnIKhCvOM2Rc+2QkjK6oIpkn6XrG/B0bJj0tO/Rlby8wz2YKOJitkHEClhi9XzkX+sM0tZ0iHYIrmIo1H3kX7GnckSSNCPdMFxNb9/q19/mp7+dLXQON93bm5p9RcmTtRXD/Bwhqa1jBeNw+Qbno57Y74z+mZgp25zwcC68ZpyCSaooGRk0wrutHnCXUtQOKdoUO+0Le7YSA7X9afnBIsjqOK5ExT1lJs69f1uv4sTn5ie/3gcVwJq7jsWBQkq4lwGVco+aFho0qXrKqkIRVAkIRz2ZwOzxsiLVXAhdxk5+hG1c7LMK73WGL6dUDuIqxoTgKnMzczd8vBM="

# REGENDATA ["MutationOrder.cabal","alex","happy"]
# EOF
